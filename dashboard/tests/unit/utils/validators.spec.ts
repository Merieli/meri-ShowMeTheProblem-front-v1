import { validateEmptyAndEmail, validateEmptyAndLenght6 } from '@/utils/validators'

describe('Validators', () => {
    describe('ðŸ’Ž Unidade:', () => {
        describe('validateEmptyAndLenght6', () => {
            it('Dado a digitaÃ§Ã£o em um campo quando nada for digitado entÃ£o Ã© informado que o campo Ã© obrigatÃ³rio', () => {
                expect(validateEmptyAndLenght6('')).toBe('*Este campo Ã© obrigatÃ³rio')
            })

            it('Dado a digitaÃ§Ã£o em um campo quando digitar poucos caracteres entÃ£o deve informar o mÃ­nimo de caracteres', () => {
                expect(validateEmptyAndLenght6('1234')).toBe('*Este campo precisa de no mÃ­nimo 6 caracteres')
            })

            it('Dado a digitaÃ§Ã£o em um campo quando digitar 6 caracteres entÃ£o deve retornar true', () => {
                expect(validateEmptyAndLenght6('123456')).toBe(true)
            })
        })

        describe('validateEmptyAndEmail', () => {
            it('Dado a digitaÃ§Ã£o em um campo quando nada for digitado entÃ£o Ã© informado que o campo Ã© obrigatÃ³rio', () => {
                expect(validateEmptyAndEmail('')).toBe('*Este campo Ã© obrigatÃ³rio')
            })

            it('Dado a digitaÃ§Ã£o em um campo quando digitar algo que nÃ£o seja um email entÃ£o deve informar que deve ser um e-mail', () => {
                expect(validateEmptyAndEmail('testando.carla.com')).toBe('*Este campo precisa ser um e-mail')
            })

            it('Dado a digitaÃ§Ã£o em um campo quando digitar um email entÃ£o deve retornar true', () => {
                expect(validateEmptyAndEmail('testando@gmail.com')).toBe(true)
            })
        })
    })
})
